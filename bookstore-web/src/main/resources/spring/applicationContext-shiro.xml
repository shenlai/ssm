<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--web.xml中shiro的filter对应的bean-->
    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/user/login" />
         <!--认证成功统一跳转到first.actio，建议不配置，不配置的话shiro认证成功会自动到上一个请求路径-->
        <!-- <property name="successUrl" value="view/home.jsp"/> -->
        <property name="unauthorizedUrl" value="/refuse.jsp" />
        <!-- <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
         -->
          <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions" ref="shiroFilterChainDefinitions"/>
    </bean>
     <!--权限过滤链定义 -->
    <bean name="shiroFilterChainDefinitions" class="java.lang.String">
        <constructor-arg>
            <value>
                <!--对静态资源设置匿名访问-->
                /images/**=anon
                /js/**=anon
                /style/**=anon

                <!--验证码-->
                /validatecode.jsp=anon

                <!--请求这个地址就自动退出-->
                /logout.action=logout

                <!--商品查询需要商品查询权限，取消url拦截配置，采用注解授权-->
                <!--/items/queryItems.action=perms[item:query]-->
                <!--&lt;!&ndash;商品修改需要商品修改权限&ndash;&gt;-->
                <!--/items/editItems.action=perms[item:edit]-->

                <!--配置记住我或认证通过可以访问的地址-->
                /index.jsp=user
                /first.action=user
                /welcome.jsp=user

                <!-- -/**=authc 表示所有的url都必须认证通过才可以访问- -->
                /** = anon
                <!--/**=anon 表示所有的url都可以匿名访问-->
            </value>
        </constructor-arg>
    </bean>
    
    <!--扩展表单认证过滤器-->
    <!-- 
    <bean id="formAuthenticationFilter" class="com.rambo.spm.core.shiro.FormAuthenticationFilter"/>
     -->
    
    <!-- Shiro 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm"/>
        <!-- <property name="cacheManager" ref="shiroCacheManager"/> -->
    </bean>
    
    <!--自定义realm-->
    <bean id="customRealm" class="com.sl.shiro.CustomRealm">
    </bean>

    <!--自定义系统认证域-->
    <!-- <bean id="systemAuthorizingRealm" class="com.rambo.spm.core.shiro.SysAuthorizingRealm"/> -->

    <!--shiro ehcache缓存-->
    <!-- 
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>
     -->
     

    <!--借助 SpringAOP 扫描那些使用 Shiro 注解的类-->
    <!-- <aop:config proxy-target-class="true"/> -->

     <!-- 
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
     -->

    <!--用于在实现了Initializable/Destroyable接口的 Shiro bean 初始化时回调-->
    <!-- 
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
     -->
    
</beans>
